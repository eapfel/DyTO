<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
							 xmlns:s="library://ns.adobe.com/flex/spark" 
							 xmlns:mx="library://ns.adobe.com/flex/halo" minWidth="1024" minHeight="768" xmlns:flexunit="flexunit.flexui.*"    creationComplete="onCreationComplete()" >	
<fx:Script>
	<![CDATA[

		import org.flexunit.runner.Request;
		import org.dyto.test.description.DescriptionFactoryTest;
		import org.dyto.test.dyto.DyTOsTest;

		public function currentRunTestSuite():Array
		{
			var testsToRun:Array = new Array();
			testsToRun.push(Request.method( org.dyto.test.description.DescriptionFactoryTest,"testIfClassNameIsCorrect"));
			testsToRun.push(Request.method( org.dyto.test.description.DescriptionFactoryTest,"testIfNumberOfPropertiesIsCorrect"));
			testsToRun.push(Request.method( org.dyto.test.description.DescriptionFactoryTest,"testIfNumberOfPropertiesIsCorrectInGeneralizationClass"));
			testsToRun.push(Request.method( org.dyto.test.description.DescriptionFactoryTest,"testIfCompositeDyTOPropertiesIsOk"));
			testsToRun.push(Request.method( org.dyto.test.description.DescriptionFactoryTest,"testIfCompositeDyTOListPropertiesIsOk"));
			testsToRun.push(Request.method( org.dyto.test.description.DescriptionFactoryTest,"testIfTreeDyTOisOk"));
			testsToRun.push(Request.method( org.dyto.test.description.DescriptionFactoryTest,"testIfCircularDyTOWorksOk"));
			testsToRun.push(Request.method( org.dyto.test.dyto.DyTOsTest,"testIfCreateNewWorksOk"));
			testsToRun.push(Request.method( org.dyto.test.dyto.DyTOsTest,"testIfCommandLogsWorksOk"));
			testsToRun.push(Request.method( org.dyto.test.dyto.DyTOsTest,"testIfCommandLogs3CircularWorksOk"));
			return testsToRun;
		}
		private function onCreationComplete():void
		{
			testRunner.runWithFlexUnit4Runner(currentRunTestSuite(), "dyto-flex-test");
		}
]]>
</fx:Script>
<flexunit:FlexUnitTestRunnerUI id="testRunner"/>
</s:Application>
